import streamlit as st
from streamlit.components.v1 import html
from streamlit_chat import message
import pandas as pd
from PIL import Image
import time
import nltk
from src.intents import INTENTS, image_dict, sound_dict
from src.utils import (
    query,
    submit,
    model_training,
    get_one_time_list,
    get_data,
    personalize_intents,
    my_html,
)

# Configuration page avec consignes

st.set_page_config(
    page_title="ECOS SDD 36 - M. Ledoux",
    page_icon=":robot:",
    # initial_sidebar_state="expanded",
)

nltk.download("omw-1.4", quiet=True)
nltk.download("punkt", quiet=True)
nltk.download("wordnet", quiet=True)

image_pg = Image.open("img/ecobots.png")
st.sidebar.image(image_pg, caption=None, width=100)
st.sidebar.header("ECOS Chatbot: Patient simul√© par l'intelligence artificielle")
st.sidebar.markdown(
    """

**Lisez l'√©nonc√© et lancez vous en disant bonjour √† votre patient(e) !**

ECOS propos√© par Delphine Coudray et K√©vin Yauy.  

Contact: [d-coudray@chu-montpellier.fr](mailto:d-coudray@chu-montpellier.fr) & [kevin.yauy@chu-montpellier.fr](mailto:kevin.yauy@chu-montpellier.fr)
"""
)

image_univ = Image.open("img/logosfacmontpellier.png")
st.sidebar.image(image_univ, caption=None, width=190)
image_chu = Image.open("img/CHU-montpellier.png")
st.sidebar.image(image_chu, caption=None, width=95)

# Functions


@st.cache(allow_output_mutation=True)
def get_intents():
    return INTENTS


@st.cache(allow_output_mutation=True)
def get_one_time_list_load(sdd):
    return get_one_time_list(sdd)


@st.cache(allow_output_mutation=True)
def personalize_intents_load(intents, patients_descriptions):
    return personalize_intents(intents, patients_descriptions)


@st.cache(allow_output_mutation=True)
def get_data_load(sdd, intents):
    return get_data(sdd, intents)


@st.cache(allow_output_mutation=True)
def model_training_load(data):
    return model_training(data)


def get_text():
    input_text = st.text_input(
        "Vous (interne aux urgences): ",
        key="input",
        help="Discutez avec votre patient avec des phrases compl√®tes. Si probl√®me: contactez kevin.yauy@chu-montpellier.fr",
        on_change=submit,
    )
    return st.session_state.answer


# JSON INPUT

## utilisation d'un dictionnaire pour repr√©senter un fichier JSON d'intentions

image_dict_sdd = {
    "Attendez Docteur, on m'a d√©j√† fait faire une prise de sang tout √† l'heure. Peut etre que vous aurez d√©j√† des resultats ? *** Voici les resultats que vous retrouvez sur le dossier informatis√© du patient ***": "img/dc_sdd036_bio.png",
    "Mon m√©decin m'avait demand√© de faire un scanner, j'ai eu de la chance j'ai pu avoir un rendez-vous ce matin, voil√† le compte rendu.": "img/dc_sdd036_scan.png",
}

image_dict.update(image_dict_sdd)

patient_descriptions = {
    "name": ["M. Ledoux"],
    "taille": ["Je fais 1m75"],
    "poids": ["Je fais 92kg"],
    "job": ["Je suis retrait√©, ancien infirmier. "],
    "motif": [
        "J'ai mal au dos depuis 4 jours. J'ai vu mon m√©decin traitant il y a 4 jours il m'a dit que j'avais une colique n√©phr√©tique et m'a donn√© des antalgiques mais l√† √ßa ne va pas mieux ! "
    ],
    "stress": ["J'ai mal √† mon dos.."],
    "age": ["J'ai 65 ans"],
    "antecedant": [
        "J'ai d√©j√† eu une fois un crise de goutte pour lequel je prend de l'allopurinol."
    ],
    "antecedantfam": ["Pas √† ma connaissance", "Je ne crois pas"],
    "howareyou": ["Vraiment pas bien Docteur."],
    "tabac": ["Non Docteur."],
}

sdd = [
    {
        "tag": "prescriptionExplorationIncomplete",
        "patterns": [
            "Je vous propose de faire une prise de sang",
            "Je vous propose de faire une prise de sang et un scanner, ainsi qu'une analyse de vos urines",
        ],
        "responses": ["Qu'est ce que vous allez rechercher sur la prise de sang ? "],
    },
    {
        "tag": "prescriptionExploration",
        "patterns": [
            "Je vais vous proposer de faire une prise de sang, avec une NFS, une CRP pour recherche une infection, une cr√©atinin√©mie pour evaluer votre fonction r√©nale. Vous devrez faire un examen urinaire et sanguin pour chercher des bact√©ries (ECBU et h√©mocultures). Enfin je vais vous proposer de r√©aliser un scanner abdominopelvien sans injection pour chercher la cause de vos douleurs et de cette probable pyelonephrite.",
            "je vais vous proposer une prise de sang afin de recherche si vous avez un syndrome inflammatoire. un ECBU mais aussi un scanner",
        ],
        "responses": [
            "Attendez Docteur, on m'a d√©j√† fait faire une prise de sang tout √† l'heure. Peut etre que vous aurez d√©j√† des resultats ? *** Voici les resultats que vous retrouvez sur le dossier informatis√© du patient ***"
        ],
    },
    {
        "tag": "analyseSangExploration",
        "patterns": [
            "Le bilan sanguin pr√©sente une insuffisance r√©nale l√©g√®re et syndrome inflammatoire biologique "
        ],
        "responses": ["Qu'est ce qui faut faire encore ? "],
    },
    {
        "tag": "analyseImagerieExploration",
        "patterns": [
            "Vous allez faire un scanner abdominopelvien afin de voir la cause de vos fievres et vos douleurs.",
            "je vais vous prescrire un scanner abdominopelvien",
            "on va faire un scanner de l'abdomen",
            "je vais vous prescrire un scanner et un examen des urines.",
            "Le bilan sanguin pr√©sente une insuffisance r√©nale l√©g√®re et syndrome inflammatoire biologique. Il faut que vous passiez un scanner de l'abdomen.  ",
        ],
        "responses": [
            "Mon m√©decin m'avait demand√© de faire un scanner, j'ai eu de la chance j'ai pu avoir un rendez-vous ce matin, voil√† le compte rendu."
        ],
    },
    {
        "tag": "annonce",
        "patterns": [
            "Je comprends, d'apr√®s vos symptomes, vous avez probablement une py√©lon√©phrite aigue obstructive. ",
            "Vous avez une py√©lon√©phrite aigue obstructive qui explique vos douleurs et qu'il faut qu'on soigne.",
        ],
        "responses": [
            "Pouvez vous me detailler ce qu'il va se passer Docteur maintenant ? Je peux rentrer chez moi ?"
        ],
    },
    {
        "tag": "priseEnCharge",
        "patterns": [
            "Je vous confirme que vous souffrez d'une py√©lon√©phrite. Je vais vous hospitaliser et vous mettre rapidement sous antibioth√©rapie intraveineuse. Je vais contacter le m√©decin urologue, car il va falloir drainer vos voies urinaires, afin de guerir de votre pyelon√©phrite. ",
            "Vous allez rester √† l'hopital ce soir, je vais vous mettre sous antibiotique afin de guerir de votre py√©lon√©phrite.",
            "Je vais vous mettre sous antibioth√©rapie. ",
        ],
        "responses": ["Entendu Docteur, je vous fais confiance."],
    },
    {
        "tag": "repas",
        "patterns": ["Quel est l'heure de votre dernier repas ?"],
        "responses": ["Hier soir vers 20h Docteur."],
    },
    {
        "tag": "depart",
        "patterns": [
            "Vous allez rentrer chez vous avec des antibiotiques.",
            "oui oui pas de souci, prenez rdv avec l'urologue bient√¥t, vous allez pouvoir rentrer chez vous",
        ],
        "responses": ["Bonne nouvelle, au revoir Docteur, √† bient√¥t."],
    },
]

# Generation des messages et du mod√®le d'IA

one_time_list = get_one_time_list_load(sdd)
intents = get_intents()
intents_perso = personalize_intents_load(intents, patient_descriptions)
data = get_data(sdd, intents_perso)
model, words, classes, lemmatizer = model_training_load(data)
st.header("Box 2 des urgences, 21h")

(
    tab1,
    tab2,
    tab3,
) = st.tabs(["üìù Fiche Etudiant", "üïë Commencez l'ECOS", "‚úÖ Correction"])

with tab1:

    st.subheader("Contexte")
    st.markdown(
        """
    Vous √™tes interne aux urgences.
    Le patient que vous allez prendre en charge se pr√©sente spontan√©ment aux urgences.

    M. Ledoux Jules, ancien infirmer aux urgences, 65 ans pr√©sente des douleurs lombaires √† droite depuis 4 jours. 
    Il a consult√© son m√©decin traitant il y a 2 jours √† ce sujet qui lui a diagnostiqu√© une colique n√©phr√©tique. 
    Il lui a prescrit du Ketoprof√®ne et du Paracetamol. Les douleurs persistent malgr√© le traitement ce qui a pouss√© M. Ledoux √† venir aux urgences.  
    Nous sommes vendredi soir il est 21h.   

    A l'arriv√©e ses constantes sont : TA 11/8, FC 107 bpm, temp√©rature 38,8¬∞C.
    Vous n'avez pas √† r√©aliser d'examen clinique. 
    )
    """
    )
    st.subheader("Objectifs")
    st.markdown(
        """
    - Prevoyez les examens n√©cessaires pour avancer dans votre diagnostic.
    - Vous devez initier la prise en charge th√©rapeutique. 
    """
    )

    st.subheader("Pret ?")
    st.markdown(
        """
    Cliquez sur la page "üïë Commencez l'ECOS" !
    """
    )

    st.subheader("Briefing et corrections")
    st.markdown(
        """
    Cliquez sur la page "‚úÖ Correction" apr√®s avoir fait l'ECOS!
    """
    )


with tab2:

    if "answer" not in st.session_state:
        st.session_state.answer = ""

    if "generated" not in st.session_state:
        st.session_state["generated"] = []

    if "past" not in st.session_state:
        st.session_state["past"] = []

    if "one_time_intent" not in st.session_state:
        st.session_state.one_time_intent = []

    if "timer" not in st.session_state:
        st.session_state["timer"] = False

    if "disabled" not in st.session_state:
        st.session_state["disabled"] = False

    if st.button("Debug mode"):
        debug = "On"
    else:
        debug = "Off"

    user_input = get_text()

    if user_input:
        output = query(
            user_input, debug, one_time_list, model, lemmatizer, words, classes, data
        )
        st.session_state.past.append(user_input)
        st.session_state.generated.append(output)

    if st.session_state["generated"]:
        for i in range(len(st.session_state["generated"]) - 1, -1, -1):
            message(
                st.session_state["generated"][i], key=str(i), avatar_style="pixel-art"
            )
            if st.session_state["generated"][i] in image_dict.keys():
                st.image(image_dict[st.session_state["generated"][i]], caption=None)
            if st.session_state["generated"][i] in sound_dict.keys():
                st.audio(
                    sound_dict[st.session_state["generated"][i]],
                    format="audio/mp3",
                    start_time=0,
                )
            message(
                st.session_state["past"][i],
                is_user=True,
                key=str(i) + "_user",
                avatar_style="pixel-art-neutral",
            )
with tab3:

    st.markdown(
        "T√©l√©chargez la conversation et envoyez la √† [kevin.yauy@chu-montpellier.fr](mailto:kevin.yauy@chu-montpellier.fr). Je vous enverrai la grille de correction!"
    )
    if st.session_state["generated"]:
        df = pd.DataFrame(
            list(zip(st.session_state["past"], st.session_state["generated"]))
        )
        df.columns = ["Vous", "Votre patient¬∑e"]
        tsv = df.drop_duplicates().to_csv(sep="\t", index=False)
        st.download_button(
            label="T√©l√©chargez votre conversation",
            data=tsv,
            file_name="conversation_dc_sdd036_i161.tsv",
            mime="text/tsv",
        )
